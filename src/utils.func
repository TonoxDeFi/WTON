{-
    utils.func   

    Utility library for FunC.
-}

(slice) get_contract_address(int workchain, cell state_init) inline {
    return begin_cell()
        .store_uint(4, 3)
        .store_int(workchain, 8)
        .store_uint(cell_hash(state_init), 256)
    .end_cell().begin_parse();
}

(int) to_ton(int amount) inline {
    return amount * 1000000000;
}

(int) from_ton(int amount) inline {
    return amount / 1000000000;
}

(int) get_workchain(slice address) inline {
  (int wc, _) = parse_var_addr(address);
  return wc;
}

() force_chain(int workchain, slice address, int error_code) inline {
  (int wc) = get_workchain(address);
  throw_unless(error_code, wc == workchain);
}

(int) get_query_id() inline {
    return now() + mod(cur_lt(), 4294967296);
}

(slice) get_serialized_address(int workchain, int address) inline {
    return (begin_cell()
        .store_uint(2, 2)  ;; Is std address
        .store_uint(0, 1)  ;; Non-unicast
        .store_uint(workchain, 8)  ;; Basic workchain
        .store_uint(address, 256) ;; Address hash
    ).end_cell().begin_parse();
}